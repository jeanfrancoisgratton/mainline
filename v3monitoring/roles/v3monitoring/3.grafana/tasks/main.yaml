- name: Install and configure grafana
  tags:
    - grafana
    - never
  yum:
    state: installed
    name:
      - grafana

- name: Copy config and dashboard files
  tags:
    - grafana
    - never
  copy:
    src: "{{ item.src }}"
    mode: "{{ item.mode | default('0644') }}"
    owner: root
    group: root
    dest: "{{ item.dest }}"
  with_items:
    - { src: 'cert.pem', dest: '/etc/grafana/cert.pem' }
    - { src: 'cert.key', dest: '/etc/grafana/cert.key' }
    - { src: 'grafana-plugins.sh', dest: '/var/famillegratton.net/ansible/files/v3monitoring/grafana-plugins.sh', mode: '0755' }
    - { src: 'db914-tig.json', dest: '/var/famillegratton.net/ansible/files/v3monitoring/db914-tig.json', mode: '0755' }
    - { src: 'db1652-tig.json', dest: '/var/famillegratton.net/ansible/files/v3monitoring/db1652-tig.json', mode: '0755' }

- name: Templated files
  tags:
    - grafana
    - never
  template:
    src: grafana.ini.j2
    dest: /etc/grafana/grafana.ini
    owner: root
    group: root
    mode: 0644

- name: Tune grafana-server
  tags:
    - grafana
    - never
  command: setcap 'cap_net_bind_service=+ep' /usr/sbin/grafana-server

- name: Start grafana-server
  service:
    name: grafana-server
    state: started
    enabled: yes

- name: Complete grafana config, install plugins
  tags:
    - grafana
    - never
  shell: /var/famillegratton.net/ansible/files/v3monitoring/grafana-plugins.sh
  args:
    chdir: /var/famillegratton.net
    creates: /var/famillegratton.net/ansible/deploy/v3monitoring/grafana-plugins.deployed

- name: Restart grafana and nginx
  tags:
    - grafana
    - never
  systemd:
    name: "{{ item }}"
    state: restarted
    enabled: yes
    daemon_reload: yes
  with_items:
    - grafana-server
    - nginx
